### 1
- name: All except never with single rule
  headers:
    TEST_NUMBER: "1"
  when: True
  template: without_template.j2
  routes:
    - always
    - filter1
    - filter2
    - filter3

### 2
- name: All except never with 4 rules, rule 1
  headers:
    TEST_NUMBER: "2"
  when: True
  template: without_template.j2
  routes:
    - always

- name: All except never with 4 rules, rule 2
  headers:
    TEST_NUMBER: "2"
  when: True
  template: without_template.j2
  routes:
    - filter1

- name: All except never with 4 rules, rule 3
  headers:
    TEST_NUMBER: "2"
  when: True
  template: without_template.j2
  routes:
    - filter2

- name: All except never with 4 rules, rule 4
  headers:
    TEST_NUMBER: "2"
  when: True
  template: without_template.j2
  routes:
    - filter3

### 3
- name: Always and filter1 by filtering with done, rule 1
  headers:
    TEST_NUMBER: "3"
  when: True
  template: without_template.j2
  routes:
    - always

- name: Always and filter1 by filtering with done, rule 2
  headers:
    TEST_NUMBER: "3"
  when: True
  template: without_template.j2
  routes:
    - filter1
  done: True

- name: Always and filter1 by filtering with done, rule 3
  headers:
    TEST_NUMBER: "3"
  when: True
  template: without_template.j2
  routes:
    - filter2

- name: Always and filter1 by filtering with done, rule 4
  headers:
    TEST_NUMBER: "3"
  when: True
  template: without_template.j2
  routes:
    - filter3

- name: Always and filter1 by filtering with done, rule 5
  headers:
    TEST_NUMBER: "3"
  when: True
  template: without_template.j2
  routes:
    - never

### 4
- name: Always and filter2 by filtering with headers, rule 1
  headers:
    TEST_NUMBER: "4"
    filtering_header: "1"
  when: True
  template: without_template.j2
  routes:
    - always

- name: Always and filter2 by filtering with headers, rule 2
  headers:
    TEST_NUMBER: "4"
    filtering_header: "2"
  when: True
  template: without_template.j2
  routes:
    - filter1

- name: Always and filter2 by filtering with headers, rule 3
  headers:
    TEST_NUMBER: "4"
    filtering_header: "1"
  when: True
  template: without_template.j2
  routes:
    - filter2

- name: Always and filter2 by filtering with headers, rule 4
  headers:
    TEST_NUMBER: "4"
    filtering_header: "3"
  when: True
  template: without_template.j2
  routes:
    - filter3

- name: Always and filter2 by filtering with headers, rule 5
  headers:
    TEST_NUMBER: "4"
    filtering_header: "4"
  when: True
  template: without_template.j2
  routes:
    - never

### 5
- name: Always and filter2 by filtering with when, rule 1
  headers:
    TEST_NUMBER: "5"
  when: JSON['always'] == True
  template: without_template.j2
  routes:
    - always

- name: Always and filter2 by filtering with when, rule 2
  headers:
    TEST_NUMBER: "5"
  when: JSON['filter1'] == True
  template: without_template.j2
  routes:
    - filter1

- name: Always and filter2 by filtering with when, rule 3
  headers:
    TEST_NUMBER: "5"
  when: JSON['filter2'] == True
  template: without_template.j2
  routes:
    - filter2

- name: Always and filter2 by filtering with when, rule 4
  headers:
    TEST_NUMBER: "5"
  when: JSON['filter3'] == True
  template: without_template.j2
  routes:
    - filter3

- name: Always and filter2 by filtering with when, rule 5
  headers:
    TEST_NUMBER: "5"
  when: JSON['never'] == True
  template: without_template.j2
  routes:
    - never

### 6
- name: Templating 1
  headers:
    TEST_NUMBER: "6"
  when: True
  template: template1.j2
  routes:
    - always

